@model SalesOrder

<h2>Create Sales Order</h2>

<form asp-action="Create" method="post">
    <div class="form-group">
        <label asp-for="customer.Id" class="control-label">Customer</label>
        <input type="text" id="customerSearch" placeholder="Search customers..." class="form-control" />
        <select asp-for="customer.Id" class="form-control" asp-items="ViewBag.Customers"></select>
    </div>

    <table id="orderItems" class="table">
        <thead>
            <tr>
                <th>Product</th>
                <th>Quantity</th>
                <th>Price</th>
                <th>Total</th>
            </tr>
        </thead>
        <tbody>
            @for (int i = 0; i < Model.OrderItems.Count; i++)
            {
                <tr>
                    <td>
                        <select asp-for="OrderItems[i].Product.Id" class="form-control product-select">
                            @foreach (var product in ViewBag.Products)
                            {
                                <option value="@product.Id" data-price="@product.UnitPrice">@product.Name</option>
                            }
                        </select>
                    </td>
                    <td>
                        <input asp-for="OrderItems[i].Quantity" class="form-control quantity" />
                    </td>
                    <td>
                        <input asp-for="OrderItems[i].Product.UnitPrice" class="form-control price" readonly />
                    </td>
                    <td>
                        <input asp-for="OrderItems[i].Total" class="form-control total" readonly />
                    </td>
                </tr>
            }
        </tbody>
    </table>

    <button type="button" id="addItem" class="btn btn-secondary">Add Item</button>

    <div class="form-group">
        <label>Order Total</label>
        <input id="orderTotal" class="form-control" readonly />
    </div>

    <button type="submit" class="btn btn-primary">Save Order</button>
</form>

@section Scripts {
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            // Attach event listeners to existing rows
            document.querySelectorAll('#orderItems tbody tr').forEach(row => {
                attachEventListeners(row);
            });

            // Add new row for order items
            document.getElementById('addItem').addEventListener('click', function () {
                const tableBody = document.querySelector('#orderItems tbody');
                const rowCount = tableBody.querySelectorAll('tr').length;

                const newRow = document.createElement('tr');
                newRow.innerHTML = `
                    <td>
                        <select name="OrderItems[${rowCount}].Product.Id" class="form-control product-select">
        @foreach (var product in ViewBag.Products)
        {
                                    <option value="@product.Id" data-price="@product.UnitPrice">@product.Name</option>
        }
                        </select>
                    </td>
                    <td>
                        <input type="number" name="OrderItems[${rowCount}].Quantity" class="form-control quantity" min="1" value="1" />
                    </td>
                    <td>
                        <input type="text" name="OrderItems[${rowCount}].Product.UnitPrice" class="form-control price" readonly />
                    </td>
                    <td>
                        <input type="text" name="OrderItems[${rowCount}].Total" class="form-control total" readonly />
                    </td>
                `;

                tableBody.appendChild(newRow);

                // Attach event listeners to the new row
                attachEventListeners(newRow);

                // Trigger change event to update price
                const productSelect = newRow.querySelector('.product-select');
                productSelect.dispatchEvent(new Event('change'));
            });

            function attachEventListeners(row) {
                const productSelect = row.querySelector('.product-select');
                const quantityInput = row.querySelector('.quantity');
                const priceInput = row.querySelector('.price');
                const totalInput = row.querySelector('.total');

                // Update price and total when product is selected
                productSelect.addEventListener('change', function () {
                    const selectedOption = this.options[this.selectedIndex];
                    const price = parseFloat(selectedOption.getAttribute('data-price')) || 0;

                    priceInput.value = price.toFixed(2);

                    const quantity = parseFloat(quantityInput.value) || 1;
                    totalInput.value = (quantity * price).toFixed(2);

                    updateOrderTotal();
                });

                // Update total when quantity changes
                quantityInput.addEventListener('input', function () {
                    const price = parseFloat(priceInput.value) || 0;
                    const quantity = parseFloat(this.value) || 1;
                    totalInput.value = (quantity * price).toFixed(2);

                    updateOrderTotal();
                });
            }

            function updateOrderTotal() {
                let orderTotal = 0;
                document.querySelectorAll('.total').forEach(totalInput => {
                    orderTotal += parseFloat(totalInput.value) || 0;
                });

                document.getElementById('orderTotal').value = orderTotal.toFixed(2);
            }
        });
    </script>
}
